/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
	const map = {}

	for (let i = 0; i < 9; i++) {
		for (let j = 0; j < 9; j++) {
			if (board[i][j] != ".") {
				const row = `row${i} ${board[i][j]}`
				const col = `column${j}${board[i][j]}`
				const b = `board${parseInt(i / 3)}${parseInt(j / 3)}${board[i][j]}`
				if (map[row] || map[col] || map[b]) {
					return false
				}
				map[row] = true
				map[col] = true
				map[b] = true
			}
		}
	}

	return true
};

const ans1 = isValidSudoku([["5", "3", ".", ".", "7", ".", ".", ".", "."]
	, ["6", ".", ".", "1", "9", "5", ".", ".", "."]
	, [".", "9", "8", ".", ".", ".", ".", "6", "."]
	, ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
	, ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
	, ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
	, [".", "6", ".", ".", ".", ".", "2", "8", "."]
	, [".", ".", ".", "4", "1", "9", ".", ".", "5"]
	, [".", ".", ".", ".", "8", ".", ".", "7", "9"]])

console.log(ans1)

const ans2 = isValidSudoku([["8", "3", ".", ".", "7", ".", ".", ".", "."]
	, ["6", ".", ".", "1", "9", "5", ".", ".", "."]
	, [".", "9", "8", ".", ".", ".", ".", "6", "."]
	, ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
	, ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
	, ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
	, [".", "6", ".", ".", ".", ".", "2", "8", "."]
	, [".", ".", ".", "4", "1", "9", ".", ".", "5"]
	, [".", ".", ".", ".", "8", ".", ".", "7", "9"]])

console.log(ans2)
